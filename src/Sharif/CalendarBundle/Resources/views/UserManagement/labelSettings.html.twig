{% extends "SharifCalendarBundle::baseHtml.html.twig" %}

{% set labels=app.user.labels %}

{% block body %}
	{{ parent() }}
	<div id="tree-container"></div>
	<div id="details" style="display: none">
		<input id="text" type="text" />
		<div id="colorPicker"></div>
		<button data-role="button" id="removeButton">{{ 'remove'|trans|humanize }}</button>
	</div>
	<button data-role="button" onclick="addClick()">{{ 'add'|trans|humanize }}</button>
	<button data-role="button" onclick="submitClick()">{{ 'submit'|trans|humanize }}</button>
{% endblock body %}

{% block javascripts %}
	{{ parent() }}
	<script>
		var added_counter = 0
		var dirty_changes = false;

		function submitClick(e) {
			function encodeNode(node) {
				var result = {
					"id": node.id,
					"color": node.color,
					"name": node.text
				};
				if(node.hasChildren) {
					result["items"] = [];
					for(var j = 0; j < node.children.data().length; ++j) {
						result["items"] = result["items"].concat(
								encodeNode(node.children.data()[j]));
					}
				}
				return result;
			}

			var data = localDataSource.data();
			var result = [];
			for(var i = 0; i < data.length; ++i) {
				result = result.concat(encodeNode(data[i]));
			}

			console.log(JSON.stringify(result));
			$.ajax({
				data: JSON.stringify(result),
				type: "POST",
				cache: false,
				url: "{{ app.request.getSchemeAndHttpHost() }}{{ path(
				         'sharif_calendar_submit_labels') }}"
			}).done(function(msg) {
				var notif = noty({
					text: 'Your new settings were successfully submitted.',
					layout: 'topRight',
					type: 'success',
					closeWith: ['hover']
				});
				console.log(msg);
			}).fail(function() {
				var notif = noty({
					text: 'Your new settings failed to be submitted. Try again?',
					layout: 'topRight',
					type: 'error',
					closeWith: ['button'],
					buttons: [ {
						addClass: 'btn btn-primary', text: 'Retry', onClick: function($noty) {
							$noty.close();
							submitClick(e);
						}
					}, {
						addClass: 'btn btn-danger', text: 'Dismiss', onClick: function($noty) {
							$noty.close();
						}
					}]
				});
			});
		}

		function addClick(e) {
			dirty_changes = true;
			localDataSource.add({
				id: -++added_counter,
				text:   "{{ 'new_label'|trans|capitalize }}",
				color:  "#cccccc",
				image:  colorToImageUrl("#cccccc")
			});
			console.log('hi');
			updateTreeView();
		}

		function colorToImageUrl(color) {
			// Create an empty canvas element
			var canvas = document.createElement("canvas");
			canvas.width = 15;
			canvas.height = 15;

			// Draw a circle
			var ctx = canvas.getContext("2d");
			ctx.beginPath();
			ctx.arc(7, 7, 7, 0, Math.PI*2, true);
			ctx.closePath();
			ctx.fillStyle=color;
			ctx.fill();

			// Get the data-URL formatted image
			var dataURL = canvas.toDataURL("image/png");
			return dataURL;
		}

		function updateTreeView() {
			$("#tree-container").html(
					"<div class=\"treeView\" id=\"label-tree\"></div>");
			$("#label-tree").kendoTreeView({
				dragAndDrop:    true,
				loadOnDemand:   false,
				dataSource: localDataSource,
				dataImageUrlField: "image",
				select: onSelect
			});
		}

		function onSelect(e) {
			var uid = e.node.getAttribute("data-uid");
			var node = localDataSource.getByUid(uid);
			var details = $("#details");
			var colorPicker = $("#colorPicker").data("kendoColorPicker");
			var removeButton = $('#removeButton');
			var text = $("#text");
			text.unbind("change");
			colorPicker.unbind("change");
			removeButton.unbind("click");

			details.slideUp(400, function(){
				text.change(function() {
					dirty_changes = true;
					node.text = text.val();
					updateTreeView();
				});
				colorPicker.bind("change", function() {
					dirty_changes = true;
					node.color = colorPicker.value();
					node.image = colorToImageUrl(node.color);
					updateTreeView();
				});
				removeButton.bind("click", function() {
					dirty_changes = true;
					localDataSource.remove(node);
					details.slideUp();
					updateTreeView();
				});

				text.val(node.text);
				colorPicker.value(node.color);
				details.slideDown();
			});
		}
	</script>

	<script>
		var localDataSource = new kendo.data.HierarchicalDataSource({
			data: {{ data|raw }}
		});

		updateTreeView();
		$("button").button();
		$("#text").button().css({
			'cursor' : 'text',
			'font' : 'inherit',
			'outline' : 'none',
			'text-align' : 'inherit'
		});
		$("#colorPicker").kendoColorPicker();

		nodes = $("#label-tree li");
		for(i = 0; i < nodes.length; ++i) {
			var uid = nodes[i].getAttribute("data-uid");
			var node = localDataSource.getByUid(uid);
			node.image = colorToImageUrl(node.color);
		}
		updateTreeView();
	</script>
{% endblock javascripts %}
