{% extends "SharifCalendarBundle::baseHtml.html.twig" %}
{% set labels=app.user.labels %}

{% block stylesheets %}
	{{ parent() }}
	<style>
		label {
			display: inline-block;
			width: 80px;
		}

		#header-box {
			text-align: center;
		}

		#removeButton {
			display: inline-block;
			right: 110px;
		}

		#tree-container {
			direction: ltr;
		}

		#wrapper {
			margin-right: -147px;
			padding: 10px;
			position: relative;
			right: 50%;
			width: 294px;
		}
	</style>
{% endblock stylesheets %}

{% block body %}
	{{ parent() }}
	<div id="wrapper" class="ui-state-highlight ui-corner-all">
		<div id="header-box">
			<h1>ویرایش برچسب‌ها</h1>
		</div>
		<div id="tree-container"></div>
		<div id="details" style="display: none">
			<hr/>
			<label for="text">نام</label>
			<input id="text" type="text" placeholder="نام"/>
			<br/>
			<label for="description">توضیح</label>
			<input id="description" type="text" placeholder="توضیح"/>
			<br/>
			<label for="colorPicker">رنگ</label>
			<div id="colorPicker"></div>
			<br/>
			<label for="publicity">عمومی باشد؟</label>
			<input id="publicity" type="checkbox" />
			<button data-role="button" id="removeButton">
				حذف
			</button>
			<hr/>
		</div>
		<button data-role="button" onclick="addClick()">جدید</button>
		<button data-role="button" onclick="submitClick()">ثبت</button>
	</div>
{% endblock body %}

{% block javascripts %}
	{{ parent() }}
	<script>
		var exit_warning_message =
				"If you leave the page now, you will lose your unsaved data.";
		var added_counter = 0;

		function submitClick(e) {
			function encodeNode(node) {
				var result = {
					"id": node.id,
					"color": node.color,
					"name": node.text,
					"description": node.description,
					"publicity": node.publicity
				};
				if(node.hasChildren) {
					result["items"] = [];
					for(var j = 0; j < node.children.data().length; ++j) {
						result["items"] = result["items"].concat(
								encodeNode(node.children.data()[j]));
					}
				}
				return result;
			}

			var data = localDataSource.data();
			var result = [];
			for(var i = 0; i < data.length; ++i) {
				result = result.concat(encodeNode(data[i]));
			}

			console.log(JSON.stringify(result));
			$.ajax({
				data: JSON.stringify(result),
				type: "POST",
				cache: false,
				url: "{{ app.request.getSchemeAndHttpHost() }}{{ path(
				         'sharif_calendar_submit_labels') }}"
			}).done(function(msg) {
				var notif = noty({
					text: 'Your new settings were successfully submitted.',
					layout: 'topRight',
					type: 'success',
					closeWith: ['hover']
				});
				window.onbeforeunload = null;
				console.log(msg);
			}).fail(function() {
				var notif = noty({
					text: 'Your new settings failed to be submitted. Try again?',
					layout: 'topRight',
					type: 'error',
					closeWith: ['button'],
					buttons: [ {
						addClass: 'btn btn-primary', text: 'Retry', onClick: function($noty) {
							$noty.close();
							submitClick(e);
						}
					}, {
						addClass: 'btn btn-danger', text: 'Dismiss', onClick: function($noty) {
							$noty.close();
						}
					}]
				});
			});
		}

		function addClick(e) {
			window.onbeforeunload = function(){return exit_warning_message;}
			localDataSource.add({
				id: -++added_counter,
				text:   "{{ 'new_label'|trans|capitalize }}",
				color:  "#cccccc",
				image:  colorToImageUrl("#cccccc"),
				description:    "",
				publicity:  false
			});
			updateTreeView();
		}

		function colorToImageUrl(color) {
			// Create an empty canvas element
			var canvas = document.createElement("canvas");
			canvas.width = 15;
			canvas.height = 15;

			// Draw a circle
			var ctx = canvas.getContext("2d");
			ctx.beginPath();
			ctx.arc(7, 7, 7, 0, Math.PI*2, true);
			ctx.closePath();
			ctx.fillStyle=color;
			ctx.fill();

			// Get the data-URL formatted image
			var dataURL = canvas.toDataURL("image/png");
			return dataURL;
		}

		function updateTreeView() {
			$("#tree-container").html(
					"<div class=\"treeView\" id=\"label-tree\"></div>");
			$("#label-tree").kendoTreeView({
				dragAndDrop:    true,
				loadOnDemand:   false,
				dataSource: localDataSource,
				dataImageUrlField: "image",
				select: onSelect
			});
		}

		function onSelect(e) {
			var uid = e.node.getAttribute("data-uid");
			var node = localDataSource.getByUid(uid);
			var details = $("#details");
			var colorPicker = $("#colorPicker").data("kendoColorPicker");
			var removeButton = $('#removeButton');
			var text = $("#text");
			var description = $('#description');
			var publicity = $('#publicity');
			text.unbind("change");
			description.unbind("change");
			colorPicker.unbind("change");
			publicity.unbind("change");
			removeButton.unbind("click");

			details.slideUp(400, function(){
				text.change(function() {
					window.onbeforeunload = function(){return exit_warning_message;}
					node.text = text.val();
					updateTreeView();
				});
				description.change(function() {
					window.onbeforeunload = function(){return exit_warning_message;}
					node.description = description.val();
				});
				colorPicker.bind("change", function() {
					window.onbeforeunload = function(){return exit_warning_message;}
					node.color = colorPicker.value();
					node.image = colorToImageUrl(node.color);
					updateTreeView();
				});
				publicity.bind("change", function() {
					window.onbeforeunload = function(){return exit_warning_message;}
					node.publicity = publicity.is(':checked');
				});
				removeButton.bind("click", function() {
					window.onbeforeunload = function(){return exit_warning_message;}
					localDataSource.remove(node);
					details.slideUp();
					updateTreeView();
				});

				text.val(node.text);
				colorPicker.value(node.color);
				description.val(node.description);
				publicity.attr("checked", node.publicity ? "checked" : null);
				details.slideDown();
			});
		}
	</script>

	<script>
		var localDataSource = new kendo.data.HierarchicalDataSource({
			data: {{ data|raw }}
		});

		updateTreeView();
		$("button").button();
		$("#text").addClass(
				'ui-button ui-state-default ui-corner-all ui-text-button ui ');
		$("#description").addClass(
				'ui-button ui-state-default ui-corner-all ui-text-button ui ');
		$("#colorPicker").kendoColorPicker();

		nodes = $("#label-tree li");
		for(i = 0; i < nodes.length; ++i) {
			var uid = nodes[i].getAttribute("data-uid");
			var node = localDataSource.getByUid(uid);
			node.image = colorToImageUrl(node.color);
		}
		updateTreeView();
	</script>
{% endblock javascripts %}
